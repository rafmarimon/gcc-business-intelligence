version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gcc-business-intelligence
    restart: always
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - PORT=3000
      - DEBUG=${DEBUG:-false}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_URL=redis://redis:6379/0
      - USE_REDIS_CACHE=true
      - USE_REDIS_AUTH=true
      - ENFORCE_API_AUTH=${ENFORCE_API_AUTH:-true}
    volumes:
      - ./reports:/app/reports
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    networks:
      - gcc_net

  redis:
    image: redis:7-alpine
    container_name: gcc-redis
    restart: always
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - gcc_net

  # Optional database for persistent storage
  # Uncomment if needed
  # db:
  #   image: postgres:14-alpine
  #   container_name: gcc-postgres
  #   restart: always
  #   ports:
  #     - "127.0.0.1:5432:5432"
  #   environment:
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
  #     - POSTGRES_USER=${POSTGRES_USER:-postgres}
  #     - POSTGRES_DB=${POSTGRES_DB:-gcc_business_intelligence}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - gcc_net

  # Optional monitoring with Prometheus and Grafana
  # Uncomment if needed
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: gcc-prometheus
  #   restart: always
  #   ports:
  #     - "127.0.0.1:9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   networks:
  #     - gcc_net

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: gcc-grafana
  #   restart: always
  #   ports:
  #     - "127.0.0.1:3001:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - gcc_net

volumes:
  redis_data:
  # postgres_data:
  # prometheus_data:
  # grafana_data:

networks:
  gcc_net:
    driver: bridge 